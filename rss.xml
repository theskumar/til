<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
<title>theskumar TIL</title>
<description>A collection of useful things I've learned.</description>
<link>https://github.com/theskumar/til</link>
<item>
<guid>https://github.com/theskumar/til/blob/main/react/setstate-is-async.md</guid>
<link>https://github.com/theskumar/til/blob/main/react/setstate-is-async.md</link>
<title>TIL: &#x60;setState&#x60; is Asynchronous</title>
<pubDate>Wed, 08 Nov 2023 04:55:04 GMT</pubDate>
<content:encoded>&lt;p&gt;When beginning with React, I didn&amp;#39;t initially realize that the &lt;code&gt;setState&lt;/code&gt; function is asynchronous.&lt;/p&gt;
&lt;p&gt;If you call &lt;code&gt;setState&lt;/code&gt; and then immediately refer to &lt;code&gt;this.state&lt;/code&gt;, it&amp;#39;s likely that it won&amp;#39;t be updated yet.&lt;/p&gt;
&lt;p&gt;If you need to set the state and immediately act on that change, you can pass in a callback function like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;this.setState({name: &amp;#39;Jon&amp;#39;}, function() {
    // called after state has been updated
    // and the component has been re-rendered
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another option is to use the &lt;code&gt;componentWillUpdate&lt;/code&gt; or &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle methods. These methods are called immediately before and after rendering due to a state change. They&amp;#39;re also invoked when props change. If you want to respond only to state changes, consider using the callback approach.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/react-gotchas/&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
</content:encoded>
</item>
<item>
<guid>https://github.com/theskumar/til/blob/main/vscode/navigating-between-terminals.md</guid>
<link>https://github.com/theskumar/til/blob/main/vscode/navigating-between-terminals.md</link>
<title>TIL: Navigating between terminals</title>
<pubDate>Thu, 05 Oct 2023 07:34:58 GMT</pubDate>
<content:encoded>&lt;p&gt;I use iTerm as my primarily navigation and had a time using the vscode in-built terminals because of the fact that it was very hard to navigate around with keyboard shortcuts. &lt;/p&gt;
&lt;p&gt;I&amp;#39;ve updated by keybindings to make it more intuitive. Add the following to your &lt;code&gt;keybindings.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;cmd+[&lt;/code&gt; and &lt;code&gt;cmd+]&lt;/code&gt; to focus on previous and next terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &amp;quot;key&amp;quot;: &amp;quot;cmd+]&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusNext&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
{ &amp;quot;key&amp;quot;: &amp;quot;cmd+[&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusPrevious&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use &lt;code&gt;cmd+&amp;lt;num&amp;gt;&lt;/code&gt; to focus on different terminals:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ &amp;quot;key&amp;quot;: &amp;quot;cmd+1&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusAtIndex1&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
{ &amp;quot;key&amp;quot;: &amp;quot;cmd+2&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusAtIndex2&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
{ &amp;quot;key&amp;quot;: &amp;quot;cmd+3&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusAtIndex3&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
{ &amp;quot;key&amp;quot;: &amp;quot;cmd+4&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusAtIndex4&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
{ &amp;quot;key&amp;quot;: &amp;quot;cmd+5&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focusAtIndex5&amp;quot;, &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;},
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create new terminal using &lt;code&gt;cmd+n&lt;/code&gt;, the default was hard to remember.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ 
    &amp;quot;key&amp;quot;: &amp;quot;cmd+n&amp;quot;,
    &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.new&amp;quot;,
    &amp;quot;when&amp;quot;: &amp;quot;terminalFocus &amp;amp;&amp;amp; terminalHasBeenCreated || terminalFocus &amp;amp;&amp;amp; terminalProcessSupported&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To kill the terminal using &lt;code&gt;cmd+w&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{ 
    &amp;quot;key&amp;quot;: &amp;quot;cmd+w&amp;quot;,
    &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.kill&amp;quot;,
    &amp;quot;when&amp;quot;: &amp;quot;terminalFocus&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Bonus:&lt;/strong&gt; I&amp;#39;ve configured &lt;code&gt;cmd+t&lt;/code&gt; to quickly toggle between terminal and code editor.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &amp;quot;key&amp;quot;: &amp;quot;cmd+t&amp;quot;,
    &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.focus&amp;quot;,
    &amp;quot;when&amp;quot;: &amp;quot;!terminalFocus&amp;quot;
},
{
    &amp;quot;key&amp;quot;: &amp;quot;cmd+t&amp;quot;,
    &amp;quot;command&amp;quot;: &amp;quot;workbench.action.terminal.toggleTerminal&amp;quot;
},
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jbranchaud/til/blob/master/vscode/toggle-between-terminals.md&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
</content:encoded>
</item>
</channel>
</rss>